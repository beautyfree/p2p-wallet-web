{"version":3,"sources":["components/modals/ProceedUsernameModal/ProceedUsernameModal.tsx"],"names":["Wrapper","Header","Description","Buttons","ButtonProceed","ButtonCancel","CloseButton","CloseIcon","ProceedUsernameModal","close","handleCloseClick","primary","onClick","lightBlue","hideUsernameBanner","type","name"],"mappings":"6OAOMA,EAAO,qDAaPC,EAAM,qDAUNC,EAAW,0DAOXC,EAAO,qDAQPC,EAAa,yDAIbC,EAAY,yDAIZC,EAAW,4DA0BXC,EAAS,qDASFC,EAAkC,SAAC,GAAc,IAAZC,EAAY,EAAZA,MAM1CC,EAAmB,WACvBD,KAGF,OACE,yBACE,wDACA,oIAIA,yBACE,qBAAeE,SAAf,EAAuBC,QAAvB,cAGA,qBAAcC,WAAd,EAAwBD,QApBC,WAC7BE,cACAL,QAkBI,oCAIF,qBAAaM,KAAb,SAA2BH,QAA3B,GACE,qBAAWI,KAAX,a","file":"static/js/9.bf61b972.chunk.js","sourcesContent":["import React, { FC } from 'react';\n\nimport { styled } from '@linaria/react';\n\nimport { Button, Icon } from 'components/ui';\nimport { hideUsernameBanner } from 'utils/settings';\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-basis: 524px;\n  flex-direction: column;\n\n  overflow: hidden;\n\n  background: #fff;\n  border-radius: 15px;\n`;\n\nconst Header = styled.div`\n  padding: 22px 20px;\n\n  font-weight: 600;\n  font-size: 20px;\n\n  text-align: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst Description = styled.div`\n  padding: 16px 20px 24px;\n\n  font-weight: 600;\n  font-size: 16px;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  margin-bottom: 16px;\n  padding: 16px 20px;\n`;\n\nconst ButtonProceed = styled(Button)`\n  width: 234px;\n`;\n\nconst ButtonCancel = styled(Button)`\n  width: 234px;\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 32px;\n  right: 32px;\n\n  flex-shrink: 0;\n  height: 36px;\n  width: 36px;\n  margin: -10px -12px -10px 0;\n\n  color: #a3a5ba;\n\n  background: #f6f6f8;\n  border-radius: 12px;\n  outline: none;\n  cursor: pointer;\n\n  transition: color 0.15s;\n\n  appearance: none;\n\n  &:hover {\n    color: #000;\n  }\n`;\n\nconst CloseIcon = styled(Icon)`\n  width: 14px;\n  height: 14px;\n`;\n\ntype Props = {\n  close: (isHide?: boolean) => void;\n};\n\nexport const ProceedUsernameModal: FC<Props> = ({ close }) => {\n  const handleCloseButtonClick = () => {\n    hideUsernameBanner();\n    close(true);\n  };\n\n  const handleCloseClick = () => {\n    close();\n  };\n\n  return (\n    <Wrapper>\n      <Header>Proceed without a username?</Header>\n      <Description>\n        Anytime you want, you can easily reserve a username by going to the settings in the Android\n        or iOS app.\n      </Description>\n      <Buttons>\n        <ButtonProceed primary onClick={handleCloseClick}>\n          Proceed\n        </ButtonProceed>\n        <ButtonCancel lightBlue onClick={handleCloseButtonClick}>\n          Proceed &amp; donâ€™t show again\n        </ButtonCancel>\n      </Buttons>\n      <CloseButton type=\"button\" onClick={handleCloseClick}>\n        <CloseIcon name=\"close\" />\n      </CloseButton>\n    </Wrapper>\n  );\n};\n"],"sourceRoot":""}