{"version":3,"sources":["components/modals/TransactionInfoModals/common/styled.ts","components/modals/TransactionInfoModals/TransactionStatusModal/Swap/Swap.tsx","components/modals/TransactionInfoModals/TransactionStatusSwapModal/TransactionStatusSwapModal.tsx"],"names":["Wrapper","Header","Title","Desc","CloseWrapper","CloseIcon","CheckmarkIcon","OtherIcon","ProgressWrapper","StatusColors","ProgressLine","ProgressStub","BlockWrapper","TransactionStatus","TransactionBadge","TransactionLabel","Content","SendWrapper","ValueCurrency","ValueOriginal","SwapWrapper","SwapColumn","SwapInfo","SwapBlock","SwapIcon","SwapAmount","FieldsWrapper","FieldWrapper","FieldTitle","FieldValue","ShareIcon","ShareWrapper","Footer","ButtonExplorer","Section","DateHeader","Time","GoToExplorerIcon","GoToExplorerLink","Swap","params","minimumOutputAmount","tokenConfigs","useConfig","symbol","size","formatBigNumber","inputAmount","name","DEFAULT_TRANSACTION_ERROR","TransactionStatusModal","close","provider","useWallet","useState","transaction","useTransaction","network","useConnectionContext","useEffect","newProgress","timerId","setInterval","setProgress","progress","clearTimeout","executeAction","a","setIsExecuting","resultSignature","setSignature","transferNotification","header","text","Error","type","ToastManager","mount","commitment","trx","setTransactionError","transactionError","setTimeout","str","isProcessing","signature","isSuccess","onClick","trackEvent","transactionConfirmed","isExecuting","className","classNames","isError","Boolean","style","width","getExplorerUrl","navigator","error","console","primary","disabled","lightGray","href","target","rel"],"mappings":"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","file":"static/js/10.ffb4ede3.chunk.js","sourcesContent":["import { styled } from '@linaria/react';\nimport { theme, zIndexes } from '@p2p-wallet-web/ui';\n\nimport { Button, Icon } from 'components/ui';\n\nimport { INITIAL_PROGRESS } from '../TransactionStatusModal/TransactionStatusModal';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: stretch;\n  width: 524px;\n  overflow: scroll;\n\n  background: ${theme.colors.bg.primary};\n\n  border-radius: 15px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.06);\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport const Header = styled.div`\n  position: relative;\n\n  color: ${theme.colors.textIcon.primary};\n  font-weight: 500;\n  font-size: 24px;\n  font-style: normal;\n  line-height: 140%;\n  text-align: center;\n`;\n\nexport const Title = styled.div`\n  margin-bottom: 10px;\n\n  color: #000;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 100%;\n  text-transform: capitalize;\n`;\n\nexport const Desc = styled.div`\n  color: ${theme.colors.bg.buttonDisabled};\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 100%;\n`;\n\nexport const CloseWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n\n  color: ${theme.colors.bg.buttonPrimary};\n\n  border-radius: 8px;\n\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n`;\n\nexport const CheckmarkIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.textIcon.buttonPrimary};\n`;\n\nexport const OtherIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.textIcon.buttonPrimary};\n`;\n\nexport const ProgressWrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 55px;\n`;\n\nconst StatusColors = styled.div`\n  &.isProcessing {\n    background: ${theme.colors.system.warningMain};\n  }\n\n  &.isSuccess {\n    background: ${theme.colors.system.successMain};\n  }\n\n  &.isError {\n    background: ${theme.colors.system.errorMain};\n  }\n`;\n\nexport const ProgressLine = styled.div`\n  position: absolute;\n\n  left: 0;\n\n  z-index: ${zIndexes.middle};\n\n  width: ${INITIAL_PROGRESS}%;\n  height: 2px;\n\n  background: ${theme.colors.bg.buttonPrimary};\n\n  transition: width 0.15s;\n\n  &.isSuccess {\n    background: ${theme.colors.system.successMain};\n  }\n\n  &.isError {\n    background: ${theme.colors.system.errorMain};\n  }\n`;\n\nexport const ProgressStub = styled.div`\n  position: absolute;\n\n  left: 0;\n\n  z-index: ${zIndexes.bottom};\n\n  width: 100%;\n  height: 1px;\n\n  background: ${theme.colors.stroke.secondary};\n`;\n\nexport const BlockWrapper = styled(StatusColors)`\n  z-index: ${zIndexes.top};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 55px;\n  height: 55px;\n\n  border-radius: 40%;\n`;\n\nexport const TransactionStatus = styled.div`\n  display: flex;\n  align-items: center;\n\n  margin-left: 20px;\n\n  color: ${theme.colors.textIcon.primary};\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 140%;\n`;\n\nexport const TransactionBadge = styled.div`\n  display: flex;\n  align-items: center;\n\n  margin-left: 4px;\n  padding: 5px 12px;\n\n  color: ${theme.colors.textIcon.secondary};\n\n  font-weight: 500;\n  font-size: 12px;\n\n  background: ${theme.colors.bg.secondary};\n  border-radius: 4px;\n`;\n\nexport const TransactionLabel = styled(StatusColors)`\n  display: block;\n  width: 8px;\n  height: 8px;\n\n  margin-right: 8px;\n`;\n\nexport const Content = styled.div`\n  padding-top: 40px;\n`;\n\nexport const SendWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const ValueCurrency = styled.div`\n  color: #000;\n  font-weight: 600;\n  font-size: 28px;\n  line-height: 120%;\n`;\n\nexport const ValueOriginal = styled.div`\n  margin-top: 4px;\n\n  color: ${theme.colors.bg.buttonDisabled};\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 120%;\n`;\n\nexport const SwapWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  margin-bottom: 40px;\n`;\n\nexport const SwapColumn = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n\n  &:not(:first-child) {\n    justify-content: flex-start;\n  }\n\n  &:not(:last-child) {\n    justify-content: flex-end;\n  }\n`;\n\nexport const SwapInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const SwapBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 32px;\n  height: 32px;\n  margin: 6px 26px 0;\n\n  background: ${theme.colors.bg.buttonSecondary};\n  border-radius: 12px;\n`;\n\nexport const SwapIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.bg.buttonDisabled};\n`;\n\nexport const SwapAmount = styled.div`\n  margin-top: 10px;\n\n  color: #000;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 120%;\n`;\n\nexport const FieldsWrapper = styled.div``;\n\nexport const FieldWrapper = styled.div`\n  padding: 16px 30px;\n\n  &:first-child {\n    border-top: 1px solid rgba(0, 0, 0, 0.05);\n  }\n\n  &:not(:last-child) {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n  }\n`;\n\nexport const FieldTitle = styled.div`\n  color: ${theme.colors.bg.buttonDisabled};\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 21px;\n`;\n\nexport const FieldValue = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 3px;\n\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 21px;\n`;\n\nexport const ShareIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.bg.buttonDisabled};\n`;\n\nexport const ShareWrapper = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 36px;\n  height: 36px;\n  margin-left: 20px;\n\n  background: rgba(163, 165, 186, 0.1);\n  border-radius: 8px;\n  cursor: pointer;\n\n  &:hover {\n    background: ${theme.colors.bg.activePrimary};\n\n    ${ShareIcon} {\n      color: ${theme.colors.textIcon.active};\n    }\n  }\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 24px 20px;\n\n  border-top: 1px solid rgba(0, 0, 0, 0.05);\n\n  & > :not(:last-child) {\n    margin-right: 16px;\n  }\n\n  &.isCentered {\n    justify-content: center;\n  }\n`;\n\nexport const ButtonExplorer = styled(Button)`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 150%;\n`;\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 12px 20px;\n`;\n\nexport const DateHeader = styled.div`\n  display: flex;\n  justify-content: center;\n\n  color: ${theme.colors.textIcon.secondary};\n\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 120%;\n\n  & > *:not(:first-child) {\n    margin-left: 4px;\n  }\n`;\n\nexport const Time = styled.div`\n  color: ${theme.colors.textIcon.primary};\n`;\n\nexport const GoToExplorerIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n`;\n\nexport const GoToExplorerLink = styled.a`\n  display: inline-flex;\n  align-items: center;\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 140%;\n\n  text-decoration: none;\n\n  &.isDisabled {\n    pointer-events: none;\n  }\n`;\n","import type { FC } from 'react';\n\nimport type { u64 } from '@solana/spl-token';\n\nimport { useConfig } from 'app/contexts/solana/swap';\nimport { formatBigNumber } from 'app/contexts/solana/swap/utils/format';\nimport { TokenAvatar } from 'components/common/TokenAvatar';\nimport {\n  SwapAmount,\n  SwapBlock,\n  SwapColumn,\n  SwapIcon,\n  SwapInfo,\n  SwapWrapper,\n} from 'components/modals/TransactionInfoModals/common/styled';\n\nexport type SwapParams = {\n  inputTokenName: string;\n  inputAmount: u64;\n  outputTokenName: string;\n  minimumOutputAmount: u64;\n};\n\ninterface Props {\n  params: SwapParams;\n}\n\nexport const Swap: FC<Props> = ({\n  params: { inputTokenName, outputTokenName, inputAmount, minimumOutputAmount },\n}) => {\n  const { tokenConfigs } = useConfig();\n\n  return (\n    <SwapWrapper>\n      <SwapColumn>\n        <SwapInfo>\n          <TokenAvatar symbol={inputTokenName} size={44} />\n          <SwapAmount>\n            - {formatBigNumber(inputAmount, tokenConfigs[inputTokenName].decimals)} {inputTokenName}\n          </SwapAmount>\n        </SwapInfo>\n      </SwapColumn>\n      <SwapBlock>\n        <SwapIcon name=\"swap\" />\n      </SwapBlock>\n      <SwapColumn>\n        <SwapInfo>\n          <TokenAvatar symbol={outputTokenName} size={44} />\n          <SwapAmount>\n            + {formatBigNumber(minimumOutputAmount, tokenConfigs[outputTokenName].decimals)}{' '}\n            {outputTokenName}\n          </SwapAmount>\n        </SwapInfo>\n      </SwapColumn>\n    </SwapWrapper>\n  );\n};\n","import type { FunctionComponent } from 'react';\nimport { useEffect, useState } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { useConnectionContext, useTransaction, useWallet } from '@p2p-wallet-web/core';\nimport classNames from 'classnames';\n\nimport type { ModalPropsType } from 'app/contexts';\nimport { ToastManager } from 'components/common/ToastManager';\nimport { Button } from 'components/ui';\nimport { trackEvent } from 'utils/analytics';\nimport { getExplorerUrl } from 'utils/connection';\nimport { transferNotification } from 'utils/transactionNotifications';\n\nimport {\n  ButtonExplorer,\n  CheckmarkIcon,\n  CloseIcon,\n  CloseWrapper,\n  Content,\n  Desc,\n  FieldsWrapper,\n  FieldTitle,\n  FieldValue,\n  FieldWrapper,\n  Footer,\n  OtherIcon,\n  ShareIcon,\n  ShareWrapper,\n  Title,\n  Wrapper,\n} from '../common/styled';\nimport type { TransferParams } from '../TransactionStatusModal/Send';\nimport type { SwapParams } from '../TransactionStatusModal/Swap';\nimport { Swap } from '../TransactionStatusModal/Swap';\n\n/* eslint-disable */\n/* THIS FILE IS A COPY-PASTE, WILL BE REMOVED WITH\n * https://p2pvalidator.atlassian.net/browse/PWN-3322\n */\n\nconst INITIAL_PROGRESS = 5;\n\nexport const Header = styled.div`\n  position: relative;\n\n  padding: 26px 20px 50px;\n\n  text-align: center;\n`;\n\nexport const ProgressWrapper = styled.div`\n  height: 1px;\n\n  background: rgba(0, 0, 0, 0.05);\n`;\n\nexport const BlockWrapper = styled.div`\n  position: absolute;\n  bottom: -28px;\n  left: 50%;\n\n  display: flex;\n  align-items: center;\n\n  justify-content: center;\n  width: 55px;\n  height: 55px;\n  margin-left: -27px;\n\n  background: #5887ff;\n  border-radius: 12px;\n  &.isProcessing {\n    background: #ffd177;\n  }\n  &.isSuccess {\n    background: #77db7c;\n  }\n  &.isError {\n    background: #f77;\n  }\n`;\n\nconst ProgressLine = styled.div`\n  width: ${INITIAL_PROGRESS}%;\n  height: 1px;\n\n  background: #5887ff;\n\n  transition: width 0.15s;\n`;\n\nconst handleCopyClick = (str: string) => () => {\n  try {\n    void navigator.clipboard.writeText(str);\n    ToastManager.info('Copied to buffer!');\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst DEFAULT_TRANSACTION_ERROR = 'Transaction error';\n\ntype SendActionType = () => Promise<string>;\ntype SwapActionType = () => Promise<string>;\n\nexport type TransactionStatusModalProps = {\n  type: 'send' | 'swap';\n  action: SendActionType | SwapActionType;\n  params: TransferParams | SwapParams;\n};\n\nexport const TransactionStatusModal: FunctionComponent<\n  ModalPropsType<string | null> & TransactionStatusModalProps\n> = ({ type, action, params, close }) => {\n  const { provider } = useWallet();\n\n  const [progress, setProgress] = useState(5);\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [signature, setSignature] = useState<string | null>(null);\n  const transaction = useTransaction(signature);\n  const [transactionError, setTransactionError] = useState(\n    transaction?.raw?.meta?.err ? DEFAULT_TRANSACTION_ERROR : '',\n  );\n  const { network } = useConnectionContext();\n\n  useEffect(() => {\n    let newProgress = INITIAL_PROGRESS;\n\n    if (!isExecuting) {\n      return;\n    }\n\n    const timerId = setInterval(() => {\n      if (progress <= 95) {\n        newProgress += 7;\n        setProgress(newProgress);\n      } else {\n        newProgress = 95;\n        setProgress(newProgress);\n      }\n    }, 2500);\n\n    return () => {\n      clearTimeout(timerId);\n      setProgress(100);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isExecuting]);\n\n  const executeAction = async () => {\n    try {\n      setIsExecuting(true);\n\n      switch (type) {\n        case 'send': {\n          const resultSignature = await (action as SendActionType)();\n          setSignature(resultSignature);\n\n          transferNotification({\n            header: 'Sent',\n            text: `- ${(params as TransferParams).amount.formatUnits()}`,\n            symbol: (params as TransferParams).amount.token.symbol,\n          });\n\n          break;\n        }\n        case 'swap': {\n          const resultSignature = await (action as SwapActionType)();\n          setSignature(resultSignature);\n\n          break;\n        }\n        default:\n          throw new Error('Wrong type');\n      }\n    } catch (error) {\n      // setTransactionError((error as Error).message);\n      setIsExecuting(false);\n\n      if (type === 'send') {\n        ToastManager.error(type, (error as Error).message);\n      }\n    }\n  };\n\n  useEffect(() => {\n    void executeAction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const mount = async () => {\n      if (!signature) {\n        return;\n      }\n\n      try {\n        const trx = await provider.connection.getTransaction(signature, {\n          commitment: 'confirmed',\n        });\n        if (trx) {\n          if (trx.meta?.err) {\n            setTransactionError(DEFAULT_TRANSACTION_ERROR);\n          } else if (transactionError) {\n            setTransactionError('');\n          }\n        } else {\n          setTimeout(mount, 3000);\n        }\n      } catch (error) {\n        // setTransactionError((error as Error).message);\n        ToastManager.error((error as Error).message);\n      } finally {\n        setIsExecuting(false);\n      }\n    };\n\n    void mount();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [signature]);\n\n  const handleCloseClick = () => {\n    if (type === 'send') {\n      trackEvent('send_close_click', { transactionConfirmed: !isExecuting });\n    } else if (type === 'swap') {\n      trackEvent('swap_close_click', { transactionConfirmed: !isExecuting });\n    }\n\n    close(signature);\n  };\n\n  const handleDoneClick = () => {\n    if (type === 'send') {\n      trackEvent('send_done_click', { transactionConfirmed: !isExecuting });\n    } else if (type === 'swap') {\n      trackEvent('swap_done_click', { transactionConfirmed: !isExecuting });\n    }\n\n    close(signature);\n  };\n\n  const handleRetryClick = () => {\n    if (type === 'send') {\n      trackEvent('send_try_again_click', { error: transactionError });\n    } else if (type === 'swap') {\n      trackEvent('swap_try_again_click', { error: transactionError });\n    }\n\n    void executeAction();\n  };\n\n  const handleCancelClick = () => {\n    if (type === 'send') {\n      trackEvent('send_cancel_click', { error: transactionError });\n    } else if (type === 'swap') {\n      trackEvent('swap_cancel_click', { error: transactionError });\n    }\n\n    close(signature);\n  };\n\n  const isProcessing = (!signature || !transaction?.key) && !transactionError;\n  const isSuccess = signature && transaction?.key && !transactionError;\n\n  const renderTitle = () => {\n    if (isSuccess) {\n      return 'Success';\n    }\n\n    if (transactionError) {\n      return 'Something went wrong';\n    }\n\n    return type === 'send' ? 'Sending...' : 'Swapping...';\n  };\n\n  const renderDescription = () => {\n    if (isSuccess) {\n      return type === 'send'\n        ? `You’ve successfully sent ${(params as TransferParams).amount.token.symbol}`\n        : 'You’ve successfully swapped tokens';\n    }\n\n    if (transactionError) {\n      return type === 'send' ? 'Tokens have not been debited' : 'Tokens have not been swapped';\n    }\n\n    return 'Transaction processing';\n  };\n\n  return (\n    <Wrapper>\n      <Header>\n        <Title>{renderTitle()}</Title>\n        <Desc>{renderDescription()}</Desc>\n        <CloseWrapper onClick={handleCloseClick}>\n          <CloseIcon name=\"close\" />\n        </CloseWrapper>\n        <BlockWrapper\n          className={classNames({\n            isProcessing,\n            isSuccess,\n            isError: Boolean(transactionError),\n          })}\n        >\n          {isSuccess ? (\n            <CheckmarkIcon name=\"checkmark\" />\n          ) : (\n            <OtherIcon name={transactionError ? 'warning' : 'timer'} />\n          )}\n        </BlockWrapper>\n      </Header>\n      <ProgressWrapper>\n        <ProgressLine style={{ width: `${progress}%` }} />\n      </ProgressWrapper>\n      <Content>\n        {type === 'swap' ? <Swap params={params as SwapParams} /> : undefined}\n        {signature ? (\n          <FieldsWrapper>\n            <FieldWrapper>\n              <FieldTitle>Transaction ID</FieldTitle>\n              <FieldValue>\n                {signature}{' '}\n                <ShareWrapper onClick={handleCopyClick(getExplorerUrl('tx', signature, network))}>\n                  <ShareIcon name=\"copy\" />\n                </ShareWrapper>\n              </FieldValue>\n            </FieldWrapper>\n          </FieldsWrapper>\n        ) : undefined}\n      </Content>\n      <Footer>\n        {transactionError ? (\n          <>\n            <Button primary disabled={isExecuting} onClick={handleRetryClick}>\n              Try again\n            </Button>\n            <Button lightGray disabled={isExecuting} onClick={handleCancelClick}>\n              Cancel\n            </Button>\n          </>\n        ) : (\n          <>\n            <Button primary onClick={handleDoneClick}>\n              Done\n            </Button>\n            {signature ? (\n              <a\n                href={getExplorerUrl('tx', signature, network)}\n                target=\"_blank\"\n                rel=\"noopener noreferrer noindex\"\n                onClick={() => {\n                  if (type === 'send') {\n                    trackEvent('send_explorer_click', { transactionConfirmed: !isExecuting });\n                  } else if (type === 'swap') {\n                    trackEvent('swap_explorer_click', { transactionConfirmed: !isExecuting });\n                  }\n                }}\n                className=\"button\"\n              >\n                <ButtonExplorer lightGray>View in blockchain explorer</ButtonExplorer>\n              </a>\n            ) : undefined}\n          </>\n        )}\n      </Footer>\n    </Wrapper>\n  );\n};\n"],"sourceRoot":""}