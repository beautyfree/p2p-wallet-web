{"version":3,"sources":["app/instructions/token/closeAccount.ts","components/modals/CloseTokenAccountModal/CloseTokenAccountModal.tsx","app/hooks/useCloseTokenAccount.ts"],"names":["closeAccount","provider","publicKey","wallet","closeAccountInstruction","Token","createCloseAccountInstruction","TOKEN_PROGRAM_ID","TransactionEnvelope","Wrapper","IconWrapper","CloseAccountIcon","Header","Description","Buttons","ButtonClose","ButtonCancel","CloseTokenAccountModal","close","closeTokenAccount","providerMut","useSolana","useWallet","handleTX","useSail","updateUserTokenAccountKeys","useTokenAccountsContext","useCallback","params","a","Error","tx","toBase58","result","success","useCloseTokenAccount","useState","handleCloseTokenAButtonClick","setIsExecuting","console","setTimeout","history","name","disabled","onClick","lightBlue"],"mappings":"4RAKaA,EAAe,SAC1BC,EACAC,EACAC,GAEA,IAAMC,EAA0BC,QAAMC,8BACpCC,mBACAL,EACAC,EACAA,EACA,IAGF,OAAO,IAAIK,IAAoBP,EAAU,CAACG,K,4BCRtCK,EAAO,qDAcPC,EAAW,0DAcXC,EAAgB,6DAOhBC,EAAM,oDAQNC,EAAW,yDAYXC,EAAO,sDAIPC,EAAW,wDAcXC,EAAY,yDAWLC,EAAmD,SAAC,GAK3D,IAL2D,EAK3D,EAL2D,YAK3D,EAL2D,YAK3D,EAL2D,QAI/DC,EACI,EADJA,MAEMC,ECvF4B,WAClC,IAAQC,EAAgBC,cAAhBD,YACAlB,EAAcoB,cAAdpB,UACAqB,EAAaC,cAAbD,SACAE,EAA+BC,cAA/BD,2BAER,OAAOE,sBAAW,uCAChB,WAAOC,GAAP,iBAAAC,EAAA,yDACOT,EADP,sBAEU,IAAIU,MAAM,sBAFpB,cAKQC,EAAK/B,EAAaoB,EAAaQ,EAAO1B,UAAWA,GALzD,SAMuBqB,EAASQ,EAAD,8BAA4BH,EAAO1B,UAAU8B,aAN5E,cAMQC,EANR,QAOaC,SAGTT,IAVJ,kBAaSQ,GAbT,2CADgB,sDAgBhB,CAACV,EAAUH,EAAalB,IDiEAiC,GAC1B,EAAsCC,oBAAtC,sBAAM,EAAN,KAAM,EAAN,KAMMC,EAA4B,uCAAG,sBAAAR,EAAA,sEAEjCS,MAFiC,SAG3BnB,EAAkB,CAAEjB,cAHO,sDAKjCqC,kBALiC,uBAOjCD,MAPiC,oBAUnCE,YAAW,WACTC,qBADFD,KAIAtB,IAdmC,8DAAH,qDAiBlC,OACE,4BACE,0BACE,iBAAkBwB,KAAlB,aAEF,0CAAQ,EAAR,eACA,2KAIA,4BACE,iBAAaC,SAAb,EAAoCC,QAApC,mCAGA,iBAAcC,WAAd,EAAwBF,SAAxB,EAA+CC,QAnCtB,WAC7B1B,KAkCI,2B","file":"static/js/8.9b2d97cb.chunk.js","sourcesContent":["import type { AugmentedProvider } from '@saberhq/solana-contrib';\nimport { TransactionEnvelope } from '@saberhq/solana-contrib';\nimport { Token, TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport type { PublicKey } from '@solana/web3.js';\n\nexport const closeAccount = (\n  provider: AugmentedProvider,\n  publicKey: PublicKey,\n  wallet: PublicKey,\n): TransactionEnvelope => {\n  const closeAccountInstruction = Token.createCloseAccountInstruction(\n    TOKEN_PROGRAM_ID,\n    publicKey,\n    wallet,\n    wallet,\n    [],\n  );\n\n  return new TransactionEnvelope(provider, [closeAccountInstruction]);\n};\n","import type { FunctionComponent } from 'react';\nimport { useState } from 'react';\n\nimport { styled } from '@linaria/react';\nimport type * as web3 from '@solana/web3.js';\nimport type { History } from 'history';\n\nimport { useCloseTokenAccount } from 'app/hooks';\nimport { Button, Icon } from 'components/ui';\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-basis: 504px;\n  flex-direction: column;\n  padding: 32px 0 0;\n\n  overflow: hidden;\n\n  background: #fff;\n  border-radius: 15px;\n`;\n\nconst IconWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 44px;\n  height: 44px;\n\n  margin: 0 20px;\n  padding: 8px;\n\n  background: #f77;\n  border-radius: 12px;\n`;\n\nconst CloseAccountIcon = styled(Icon)`\n  width: 25px;\n  height: 25px;\n\n  color: #fff;\n`;\n\nconst Header = styled.div`\n  margin-top: 20px;\n  padding: 0 20px;\n\n  font-weight: 600;\n  font-size: 20px;\n`;\n\nconst Description = styled.div`\n  margin-top: 12px;\n  padding: 0 20px 32px;\n\n  color: #a3a5ba;\n\n  font-weight: 600;\n  font-size: 16px;\n\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst Buttons = styled.div`\n  padding: 24px 20px;\n`;\n\nconst ButtonClose = styled(Button)`\n  margin-right: 16px;\n\n  color: #f43d3d;\n\n  border: 1px solid #f43d3d;\n\n  &:disabled {\n    background: #f77;\n    border: none;\n    opacity: 0.5;\n  }\n`;\n\nconst ButtonCancel = styled(Button)`\n  min-width: 93px;\n`;\n\ntype Props = {\n  publicKey: web3.PublicKey;\n  tokenName: string;\n  history: History;\n  close: () => void;\n};\n\nexport const CloseTokenAccountModal: FunctionComponent<Props> = ({\n  publicKey,\n  tokenName,\n  history,\n  close,\n}) => {\n  const closeTokenAccount = useCloseTokenAccount();\n  const [isExecuting, setIsExecuting] = useState(false);\n\n  const handleCloseButtonClick = () => {\n    close();\n  };\n\n  const handleCloseTokenAButtonClick = async () => {\n    try {\n      setIsExecuting(true);\n      await closeTokenAccount({ publicKey });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsExecuting(false);\n    }\n\n    setTimeout(() => {\n      history.push('/wallets');\n    }, 100);\n\n    close();\n  };\n\n  return (\n    <Wrapper>\n      <IconWrapper>\n        <CloseAccountIcon name=\"bucket\" />\n      </IconWrapper>\n      <Header>{`Close ${tokenName} account?`}</Header>\n      <Description>\n        Are you sure you want to delete token account? This will permanently disable token transfers\n        to this address and remove it from your wallet.\n      </Description>\n      <Buttons>\n        <ButtonClose disabled={isExecuting} onClick={handleCloseTokenAButtonClick}>\n          Close token account\n        </ButtonClose>\n        <ButtonCancel lightBlue disabled={isExecuting} onClick={handleCloseButtonClick}>\n          Cancel\n        </ButtonCancel>\n      </Buttons>\n    </Wrapper>\n  );\n};\n","import { useCallback } from 'react';\n\nimport { useSolana, useTokenAccountsContext, useWallet } from '@p2p-wallet-web/core';\nimport type { HandleTXResponse } from '@p2p-wallet-web/sail';\nimport { useSail } from '@p2p-wallet-web/sail';\nimport type { PublicKey } from '@solana/web3.js';\n\nimport { closeAccount } from 'app/instructions';\n\nexport type CloseTokenParams = {\n  publicKey: PublicKey;\n};\n\nexport const useCloseTokenAccount = () => {\n  const { providerMut } = useSolana();\n  const { publicKey } = useWallet();\n  const { handleTX } = useSail();\n  const { updateUserTokenAccountKeys } = useTokenAccountsContext();\n\n  return useCallback(\n    async (params: CloseTokenParams): Promise<HandleTXResponse> => {\n      if (!providerMut) {\n        throw new Error('Provider not ready');\n      }\n\n      const tx = closeAccount(providerMut, params.publicKey, publicKey);\n      const result = await handleTX(tx, `Close token account ${params.publicKey.toBase58()}`);\n      if (result.success) {\n        // TODO: as i checked, you need to reinvestigate better way to update tokens after close\n        // because now it shows after this update\n        updateUserTokenAccountKeys();\n      }\n\n      return result;\n    },\n    [handleTX, providerMut, publicKey],\n  );\n};\n"],"sourceRoot":""}